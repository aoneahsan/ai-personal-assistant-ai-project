// @import 'primereact/resources/themes/lara-light-cyan/theme.css';
// @import 'primereact/resources/themes/md-light-deeppurple/theme.css';
// @import 'primereact/resources/themes/arya-purple/theme.css';
@import 'primeflex/primeflex.scss';
@import 'primeicons/primeicons.css';
@import 'primeflex/themes/primeone-light.css';
@import './../node_modules/primeflex/primeflex.css';
@import 'primereact/resources/themes/md-light-indigo/theme.css';

html {
  font-size: 16px;
}

.mybutton {
  @include styleclass(
    'bg-primary bg-blue-500 hover:bg-blue-600 border-round transition-colors transition-duration-150 p-3 border-none'
  );
}

// Global PrimeReact Theme Overrides for Better Contrast and Visibility
// These ensure that all PrimeReact components use our theme variables properly

// Button overrides to ensure icons and text are visible
.p-button {
  // Ensure button icons inherit color properly
  .p-button-icon {
    color: inherit !important;
  }

  // Primary button styling
  &.p-button-primary {
    background: var(--color-primary) !important;
    border-color: var(--color-primary) !important;
    color: white !important;

    &:hover {
      background: var(--color-primary-hover) !important;
      border-color: var(--color-primary-hover) !important;
    }

    .p-button-icon {
      color: white !important;
    }
  }

  // Text button styling
  &.p-button-text {
    background: transparent !important;
    border: none !important;

    .p-button-icon {
      color: inherit !important;
    }
  }

  // Outlined button styling
  &.p-button-outlined {
    background: transparent !important;
    color: var(--color-primary) !important;
    border-color: var(--color-primary) !important;

    &:hover {
      background: var(--color-hover) !important;
      color: var(--color-primary-hover) !important;
      border-color: var(--color-primary-hover) !important;
    }

    .p-button-icon {
      color: inherit !important;
    }
  }
}

// InputText overrides
.p-inputtext {
  background: var(--color-surface) !important;
  color: var(--color-text-primary) !important;
  border: 1px solid var(--color-border) !important;

  &:focus {
    border-color: var(--color-primary) !important;
    box-shadow: 0 0 0 2px var(--color-focus) !important;
  }

  &::placeholder {
    color: var(--color-text-secondary) !important;
    opacity: 0.8;
  }
}

// ADDED: Specific overrides for message input field
.message-input-container {
  .p-inputtext {
    background: transparent !important;
    color: var(--color-text-primary) !important;
    border: none !important;
    font-size: 16px !important;
    font-weight: 400 !important;

    &::placeholder {
      color: var(--color-text-secondary) !important;
      opacity: 0.8 !important;
      font-weight: 400 !important;
    }

    &:focus {
      border: none !important;
      box-shadow: none !important;
      outline: none !important;
      color: var(--color-text-primary) !important;
    }

    &:disabled {
      opacity: 0.6 !important;
      background: transparent !important;
      color: var(--color-text-secondary) !important;
    }
  }
}

// ADDED: Force visibility for all React Icons in message input
.message-input-container {
  svg {
    color: inherit !important;
    fill: currentColor !important;
  }

  .p-button-icon {
    color: inherit !important;
  }
}

// Dialog overrides
.p-dialog {
  background: var(--color-surface) !important;
  border: 1px solid var(--color-border) !important;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12) !important;

  .p-dialog-header {
    background: var(--color-surface) !important;
    color: var(--color-text-primary) !important;
    border-bottom: 1px solid var(--color-border) !important;

    .p-dialog-title {
      color: var(--color-text-primary) !important;
    }

    .p-dialog-header-icon {
      color: var(--color-text-secondary) !important;

      &:hover {
        background: var(--color-hover) !important;
        color: var(--color-primary) !important;
      }
    }
  }

  .p-dialog-content {
    background: var(--color-surface) !important;
    color: var(--color-text-primary) !important;
  }
}

// Menu overrides
.p-menu {
  background: var(--color-surface) !important;
  border: 1px solid var(--color-border) !important;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1) !important;

  .p-menuitem-link {
    color: var(--color-text-primary) !important;

    &:hover {
      background: var(--color-hover) !important;
    }

    .p-menuitem-icon {
      color: var(--color-text-secondary) !important;
    }

    .p-menuitem-text {
      color: var(--color-text-primary) !important;
    }
  }

  .p-menuitem-separator {
    background: var(--color-border) !important;
  }
}

// OverlayPanel overrides
.p-overlaypanel {
  background: var(--color-surface) !important;
  border: 1px solid var(--color-border) !important;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12) !important;

  .p-overlaypanel-content {
    background: var(--color-surface) !important;
    color: var(--color-text-primary) !important;
  }
}

// Card overrides
.p-card {
  background: var(--color-surface) !important;
  border: 1px solid var(--color-border) !important;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08) !important;

  .p-card-header {
    background: var(--color-surface) !important;
    color: var(--color-text-primary) !important;
    border-bottom: 1px solid var(--color-border) !important;
  }

  .p-card-content {
    background: var(--color-surface) !important;
    color: var(--color-text-primary) !important;
  }

  .p-card-title {
    color: var(--color-text-primary) !important;
  }

  .p-card-subtitle {
    color: var(--color-text-secondary) !important;
  }
}

// Avatar overrides
.p-avatar {
  background: var(--color-primary-light) !important;
  color: var(--color-primary) !important;
}

// Divider overrides
.p-divider {
  border-color: var(--color-border) !important;

  &.p-divider-horizontal {
    border-top-color: var(--color-border) !important;
  }

  &.p-divider-vertical {
    border-left-color: var(--color-border) !important;
  }
}

// Tooltip overrides
.p-tooltip {
  .p-tooltip-text {
    background: var(--color-text-primary) !important;
    color: var(--color-text-inverse) !important;
    border: 1px solid var(--color-border-dark) !important;
  }

  .p-tooltip-arrow {
    border-bottom-color: var(--color-text-primary) !important;
    border-top-color: var(--color-text-primary) !important;
    border-left-color: var(--color-text-primary) !important;
    border-right-color: var(--color-text-primary) !important;
  }
}

// Toast overrides
.p-toast {
  .p-toast-message {
    background: var(--color-surface) !important;
    border: 1px solid var(--color-border) !important;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1) !important;

    .p-toast-message-text {
      color: var(--color-text-primary) !important;
    }

    .p-toast-summary {
      color: var(--color-text-primary) !important;
    }

    .p-toast-detail {
      color: var(--color-text-secondary) !important;
    }

    &.p-toast-message-success {
      border-left: 4px solid var(--color-success) !important;
    }

    &.p-toast-message-error {
      border-left: 4px solid var(--color-error) !important;
    }

    &.p-toast-message-warn {
      border-left: 4px solid var(--color-warning) !important;
    }

    &.p-toast-message-info {
      border-left: 4px solid var(--color-info) !important;
    }
  }
}

// Ensure React Icons are properly colored
svg {
  color: inherit;
}

// Global text color fixes
body {
  color: var(--color-text-primary);
  background: var(--color-background);
}

// ADDED: Cursor pointer for all interactive elements
button,
.p-button,
[role='button'],
.attachment-option-card,
.p-menuitem-link,
.chat-item,
.fab-button,
[onclick],
[data-testid*='button'] {
  cursor: pointer !important;
}

// ADDED: Enhanced dialog styling
.p-dialog-mask {
  backdrop-filter: blur(8px);
  background: rgba(0, 0, 0, 0.4) !important;
}

.p-dialog {
  border-radius: 16px !important;
  overflow: hidden !important;
  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15) !important;
}

// Fix any remaining contrast issues
* {
  // Ensure all text is visible
  &[style*='color: transparent'] {
    color: var(--color-text-primary) !important;
  }

  &[style*='background: transparent'] {
    // Only override if text color would be invisible
    &:not([style*='color:']) {
      color: var(--color-text-primary) !important;
    }
  }
}

// ADDED: Hide interfering fixed elements from other pages when chat is active
body:has(.chat-container) {
  .fab-button {
    display: none !important;
  }

  .chat-list-container {
    display: none !important;
  }
}

// Fallback for browsers that don't support :has()
.chat-container ~ * .fab-button,
.chat-container + * .fab-button {
  display: none !important;
}
